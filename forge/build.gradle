import org.mtr.mapping.BuildTools

plugins {
	id "java"
	id "net.minecraftforge.gradle" version "+" apply false
}

subprojects {
	apply plugin: "java"
	apply plugin: "net.minecraftforge.gradle"

	final BuildTools buildTools = new BuildTools(project, rootProject.getProperties().getOrDefault("generate", "").toString())
	final minecraftVersion = buildTools.minecraftVersion

	minecraft {
		mappings channel: "official", version: minecraftVersion
		accessTransformer = file("src/main/resources/accesstransformer.cfg")
	}

	sourceSets.main.resources { srcDir "src/generated/resources" }

	dependencies {
		implementation project(":common")
		minecraft "net.minecraftforge:forge:${minecraftVersion}-${buildTools.getForgeVersion()}"
		testImplementation "org.junit.jupiter:junit-jupiter-api:+"
		testImplementation "com.google.code.gson:gson:+"
		testImplementation "org.reflections:reflections:+"
		testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:+"
	}

	java {
		toolchain {
			languageVersion.set(JavaLanguageVersion.of(buildTools.javaLanguageVersion))
		}
		withSourcesJar()
		withJavadocJar()
	}

	jar {
		doLast {
			buildTools.copyBuildFile(true)
		}
	}

	build {
		doLast {
			buildTools.copyBuildFile(false)
		}
	}

	test {
		useJUnitPlatform()
		testLogging { showStandardStreams = true }
	}

	tasks.withType(AbstractArchiveTask).configureEach {
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}

	tasks.withType(Javadoc).tap {
		configureEach { javadoc.options.addStringOption("Xdoclint:none", "-quiet") }
	}
}
